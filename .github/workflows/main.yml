name: Main

on:
  workflow_run:
    workflows: [CI]
    branches: [main]
    types:
      - completed

jobs:
  on-ci-workflow-failure:
    name: CI / Failure
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      # `false` makes this step fail, which is what we want
      # since no code coverage will be reported.
      - run: |
          echo 'The triggering workflow failed' && false

  on-ci-workflow-success:
    name: CI / Success
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Triggering Workflow Summary
        run: |
          echo "## CI Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Summary for the workflow that triggered this deploy." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|:------|:------|" >> $GITHUB_STEP_SUMMARY
          echo "| Id          | ${{ github.event.workflow_run.id }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Title       | ${{ github.event.workflow_run.display_title }} |" >> $GITHUB_STEP_SUMMARY
          echo "| URL         | <${{ github.event.workflow_run.html_url }}> |" >> $GITHUB_STEP_SUMMARY
          echo "| Started at  | ${{ github.event.workflow_run.created_at }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Finished at | ${{ github.event.workflow_run.updated_at }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Who         | [${{ github.event.workflow_run.actor.login }}](${{ github.event.workflow_run.actor.html_url}}) |" >> $GITHUB_STEP_SUMMARY

  code-coverage:
    name: Test / code coverage
    runs-on: ubuntu-latest
    needs:
      - on-ci-workflow-success
    steps:
      - uses: actions/checkout@v4
      - uses: Liber-UFPE/spring-gradle-build-action@v1
      - name: Run tests
        run: ./gradlew test
      - name: Coverage XML Report
        run: ./gradlew koverXmlReport
      - name: Report results to DeepSource
        run: |
          curl https://deepsource.io/cli | sh
          ./bin/deepsource report --analyzer test-coverage --key kotlin --value-file build/reports/kover/report.xml
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}