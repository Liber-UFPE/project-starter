name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

env:
  GRADLE_OPTS: "-Dorg.gradle.console=plain"

jobs:
  compile:
    name: Build / compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Liber-UFPE/spring-gradle-build-action@v2
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Starts Gradle Daemon
        run: ./gradlew
      - run: ./gradlew testClasses

  detekt:
    name: Code Analysis / detekt
    runs-on: ubuntu-latest
    needs:
      - compile
    steps:
      - uses: actions/checkout@v4
      - name: detekt report
        uses: natiginfo/action-detekt-all@1.23.1
        with:
          args: |
            --report md:build/reports/detekt/detekt.md
      - name: Detekt Summary
        run: cat build/reports/detekt/detekt.md >> $GITHUB_STEP_SUMMARY

  ktlint:
    name: Code Analysis / ktlint
    runs-on: ubuntu-latest
    needs:
      - compile
    steps:
      - uses: actions/checkout@v4
      - uses: nbadal/action-ktlint-setup@v1
      - name: ktlint version
        run: ktlint --version
      - name: run ktlin
        run: ktlint --relative >> $GITHUB_STEP_SUMMARY

  accessibility-test:
    name: Tests / Accessibility
    runs-on: ubuntu-latest
    # Since this job is experimental
    continue-on-error: true
    needs:
      - detekt
      - ktlint
    steps:
      - uses: actions/checkout@v4
      - uses: Liber-UFPE/spring-gradle-build-action@v2
      - run: ./gradlew accessibilityTestClasses
      - name: Run Accessibility Tests
        # For some annoying reason, Gradle insists in execute the `test` task
        # too. -x removes it from the task graph for this execution.
        run: ./gradlew accessibilityTest

  test:
    name: Tests / test
    runs-on: ubuntu-latest
    needs:
      - detekt
      - ktlint
    steps:
      - uses: actions/checkout@v4
      - uses: Liber-UFPE/spring-gradle-build-action@v2
      - run: ./gradlew koverHtmlReport -x accessibilityTest
      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2
      - name: Output Kover summary
        # Adapted from https://github.com/Kotlin/kotlinx-kover/issues/419#issuecomment-1632572084
        run: |
          pandoc build/reports/kover/html/index.html -f html -t gfm | \
            sed -n '/# project-starter: Overall Coverage Summary/,/<\/div>/p' | \
            grep -v "</div>" >> $GITHUB_STEP_SUMMARY
      - name: Test Summary Report
        uses: phoenix-actions/test-reporting@v12
        if: always()
        with:
          name: Kotest Report
          path: "build/test-results/test/TEST-*.xml"
          reporter: java-junit
          output-to: "step-summary"
          only-summary: "true"

  build:
    name: Package / build
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v4
      - uses: Liber-UFPE/spring-gradle-build-action@v2
      - run: ./gradlew shadowJar

  build-docker:
    name: Package / Docker / build
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v4
      - uses: Liber-UFPE/spring-gradle-build-action@v2
      - name: Run dockerBuild
        run: ./gradlew dockerBuild

  check-if-prod:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Check if prod
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - run: echo "This is a push to main branch. Following with release and deploy"

  create-release:
    name: Creates a GitHub Release
    runs-on: ubuntu-latest
    needs:
      - check-if-prod
      - build
    # Docs:
    # https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
    permissions:
      contents: write
      packages: read # to preserve default permissions
    steps:
      - uses: actions/checkout@v4
        with:
          # `0` indicates all history for all branches and tags.
          # See https://github.com/actions/checkout#usage.
          # This is relevant to properly generate git.properties file
          # when deploying.
          fetch-depth: 0
      - uses: Liber-UFPE/spring-gradle-build-action@v2
      - name: Create Release Package
        run: ./gradlew clean shadowJar
      - name: Create Github Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_TITLE=$(./gradlew releaseDate --quiet)
          TAG_NAME="v${{ github.run_number }}-$(git log HEAD -1 --pretty=format:'%h')"
          gh release create "$TAG_NAME" ./build/libs/*.jar --title "$RELEASE_TITLE" --generate-notes --latest
